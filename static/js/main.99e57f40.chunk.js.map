{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButtton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","components/UI/Navbar/Navbar.jsx","pages/About.jsx","hooks/usePost.js","hooks/useFetching.js","API/PostService.js","utils/pages.js","components/UI/button/MyButton.jsx","components/UI/MyModal/MyModal.jsx","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/pagination/Pagination.jsx","components/UI/Loader/Loader.jsx","pages/Posts.jsx","pages/PostIdPage.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","myModal","myModalContent","active","myBtn","myInput","loader","rotate","Navbar","react_default","a","createElement","className","react_router_dom","to","About","style","width","display","justifyContent","usePosts","posts","sort","query","sortedPosts","useMemo","Object","toConsumableArray","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","_useState","useState","_useState2","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_ref","asyncToGenerator","regenerator_default","mark","_callee","id","wrap","_context","prev","next","t0","message","finish","stop","_x","apply","this","arguments","PostService","limit","page","axios","get","params","_limit","_page","response","concat","getPageCount","totalCount","Math","ceil","MyButton","children","props","objectWithoutProperties","assign","classes","MyModal","visible","setVisible","rootClasses","push","join","onClick","e","stopPropagation","MyInput","React","forwardRef","ref","PostForm","create","body","setPost","input_MyInput","value","onChange","objectSpread","target","type","placeholder","button_MyButton","preventDefault","newPost","Date","now","MySelect","options","defaultValue","event","disabled","map","option","key","name","PostFilter","setFilter","select_MySelect","selectedSort","PostItem","router","useNavigate","remove","PostList","length","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","components_PostItem","number","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Loader","Posts","setPosts","_useState5","_useState6","modal","setModal","_useState7","_useState8","setTotalPages","_useState9","_useState10","_useState11","_useState12","setPage","sortedAndSearchedPosts","_useFetching","getALL","sent","data","headers","_useFetching2","fetchPosts","isPostsLoading","postError","useEffect","marginTop","UI_MyModal_MyModal","components_PostForm","margin","components_PostFilter","UI_Loader_Loader","components_PostList","pagination_Pagination","PostIdPage","useParams","comment","setComment","getById","fetchPostById","_useFetching3","_callee2","_context2","getCommentsByPostId","_useFetching4","fetchComments","isComLoading","flexWrap","fontSize","alignItems","flexDirection","border","comm","defineProperty","email","AppRouter","react_router","path","element","pages_About","exact","pages_Posts","pages_PostIdPage","App","UI_Navbar_Navbar","components_AppRouter","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.99e57f40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__1pSrQ\",\"myModalContent\":\"MyModal_myModalContent__3qg6z\",\"active\":\"MyModal_active__38orM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButtton_myBtn__2suVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__3JgiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2DSH7\",\"rotate\":\"Loader_rotate__1VrEX\"};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar__links\">\n                <Link className=\"link\" to=\"/about\">About</Link>\n                <Link className=\"link\" to=\"/posts\">Stickers</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div style={{ width: '800px',display: 'flex' ,justifyContent: 'center'}}>\n            <h1>About</h1>\n        </div>\n\n    );\n};\n\nexport default About;","import {useMemo} from \"react\";\n\nexport const useSortedPosts = (posts, sort) => {\n    const sortedPosts = useMemo(() => {\n        if (sort) {\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\n        }\n        return posts;\n    }, [sort, posts]);\n\n    return sortedPosts;\n}\n//hook для поиска поста в массиве\nexport const usePosts = (posts, sort, query) => {\n    const sortedPosts = useSortedPosts(posts, sort);\n\n    const sortedAndSearchedPosts = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\n    }, [query, sortedPosts])\n\n    return sortedAndSearchedPosts;\n}","import {useState} from \"react\";\n//hook который предоставляет обработку индикации загрузки\n// и обработку ошибки какого-то запроса на получение данных\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async id => {\n        try{\n            setIsLoading(true)\n            await callback()\n        } catch (e) {\n            setError(e.message);\n        } finally {\n            setIsLoading(false)\n        }\n    }\n    return [fetching, isLoading, error];\n}","import axios from \"axios\";\n\nexport default class PostService {\n    static async getALL(limit = 10, page = 1) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts/', {\n            params: {\n                _limit: limit,\n                _page: page\n            }\n        })\n        return response;\n    }\n//get post id from server\n    static async getById(id) {\n        //добавляем к запросу id поста\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/`)\n        return response;\n    }\n\n    static async getCommentsByPostId(id) {\n//get post comment by id from server\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\n        return response;\n    }\n}","//функция обработки страниц\n//из общего количетсва постов и лимита считает общее число страниц\n\nexport const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n}\n\n//заполение массива постов для страниц\nexport const getPagesArray = (totalPages) => {\n    let result = [];\n    for (let i = 0; i < totalPages; i++) {\n        result.push(i + 1);\n    }\n    return result;\n}\n","import React from 'react';\nimport classes from \"./MyButtton.module.css\";\n\nconst MyButton = ({children,...props}) => {\n    return (\n        //special props children when I take a button value from App.js\n        <button {...props} className={classes.myBtn}>\n            {children}\n        </button>\n    );\n};\n\nexport default MyButton;","import React from 'react';\nimport classes from './MyModal.module.css';\n\nconst MyModal = ({children, visible, setVisible}) => {\n\n    //с помощью этой конструкции мы определяем добавлять класс active или не добавдять\n    const rootClasses = [classes.myModal]\n    if(visible === true) {\n        rootClasses.push(classes.active);\n    }\n\n    //e.stopPropagation() функция слушателя событий которая не дает сработать event\n    return (\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\n            <div className={classes.myModalContent} onClick={(e) => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default MyModal;","import React from 'react';\nimport classes from './MyInput.module.css';\n\nconst MyInput = React.forwardRef((props,ref) => {\n    return (\n        <input ref={ref} className={classes.myInput} {...props}/>\n\n    );\n});\n\nexport default MyInput;","import React from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport {useState} from \"react\";\n\n//вызов props create из app для добавления в конец массива постов ноаого поста\nconst PostForm = ({create}) => {\n    const [post, setPost] = useState({title: '', body: ''})\n\n    const addNewPost = (e) => {\n        e.preventDefault()\n        //this is a very important construction. we take an older array post like \"posts\"\n        // and add a new post in the end with \"newPost\" object\n        const newPost = {\n            ...post, id: Date.now()\n        }\n        create(newPost);\n        setPost({title: '', body: ''})\n    }\n\n    return (\n        <form>\n            <MyInput\n                value={post.title}\n                onChange = {e => setPost({...post, title: e.target.value})}\n                type='text'\n                placeholder=\"Name\"\n            />\n            <br/>\n            <MyInput\n                value={post.body}\n                onChange = {e => setPost({...post, body: e.target.value})}\n                type='text'\n                placeholder=\"Description\"\n            />\n            <br/>\n            <MyButton onClick={addNewPost}>Create</MyButton>\n        </form>\n    );\n};\n\nexport default PostForm;","import React from 'react';\n//select - выпадающий список-->\nconst MySelect = ({options, defaultValue, value, onChange }) => {\n    return (\n        <select\n            value={value}\n            onChange={event =>onChange(event.target.value)}\n        >\n            <option disabled={true} value=\"\">{defaultValue}</option>\n            {options.map(option =>\n                <option key={option.value} value={option.value}>\n                    {option.name}\n                </option>\n            )}\n        </select>\n    );\n};\n\nexport default MySelect;","import React from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\n\nfunction PostFilter({filter, setFilter}) {\n    return (\n        <div>\n            <MyInput\n                value={filter.query}\n                onChange={e => setFilter({...filter, query: e.target.value})}\n                placeholder=\"Search...\"\n            />\n            <MySelect\n                value={filter.sort}\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\n                defaultValue=\"Sorting by\"\n                options={[\n                    {value: 'title', name: 'By name'},\n                    {value: 'body', name: 'By description'}\n                ]}\n            />\n        </div>\n    );\n}\n\nexport default PostFilter;","import React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst PostItem = (props) => {\n    //динамическая навигация\n    const router = useNavigate();\n    return (\n\n            <div className=\"post\">\n                <div className=\"post__counter\">\n                    <strong>{props.post.id}. {props.post.title}</strong>\n                    <div>\n                        {props.post.body}\n                    </div>\n                </div>\n                <div className=\"post__btns\">\n                    <MyButton onClick={() => props.remove(props.post)}>Delete</MyButton>\n                    <MyButton onClick={() => router(`/posts/${props.post.id}`)}>Open</MyButton>\n                </div>\n            </div>\n\n    );\n};\n\nexport default PostItem;","import React from 'react';\nimport PostItem from \"./PostItem\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst PostList = ({posts, title, remove}) => {\n\n    if (!posts.length) {\n        return (\n            <h1 style={{textAlign: 'center'}}>\n                Stickers not found\n            </h1>\n        )\n    }\n    //TransitionGroup анимация смотреть в доках по реакту стили в App.css\n    return (\n        <div>\n            <h1 style={{textAlign: 'center'}}>\n                {title}\n            </h1>\n            <TransitionGroup>\n                {posts.map((post, index) =>\n                    <CSSTransition\n                        key={post.id}\n                        timeout={500}\n                        classNames=\"post\"\n                    >\n                    <PostItem remove={remove} number={index + 1} post={post}/>\n                    </CSSTransition>\n                        )}\n            </TransitionGroup>\n        </div>\n    );\n};\n\nexport default PostList;","import React from 'react';\nimport {getPagesArray} from \"../../../utils/pages\";\n//прокрутка страниц\n//получает массив значений из страниц и по клику изменяет страницу\nconst Pagination = ({totalPages, page, changePage}) => {\n    //сформируем массив со значениеями от 1 до 10\n    // на основании которого при нажатии на кнопки будет меняться страница\n    let pagesArray = getPagesArray(totalPages);\n    return (\n        <div className=\"page__wrapper\">\n            {pagesArray.map(p =>\n                <span\n                    onClick={() => changePage(p)}\n                    key={p} className={page === p ? 'page page__current' : 'page'}\n                >\n                    {p}\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default Pagination;","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = () => {\n    return (\n        <div className={classes.loader}>\n            \n        </div>\n    );\n};\n\nexport default Loader;","import React, {useEffect, useMemo, useState} from 'react';\nimport {usePosts} from \"../hooks/usePost\";\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport {getPageCount} from \"../utils/pages\";\nimport MyButton from \"../components/UI/button/MyButton\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport PostList from \"../components/PostList\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\n\n\n\nfunction Posts() {\n\n    const [posts, setPosts] = useState([\n\n    ])\n    //двустороннее связывание сортировки\n    //const [selectedSort, setSelectedSort] = useState('')\n    //Реалезация поиска\n    //состояние для поиска\n    //const [searchQuery, setSearchQuery] = useState('')\n\n    //новая сортировка\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    //отсортируем массив и уставновим номальный поиск вызывающтйся только при изменении в массиве\n\n    //состояние отвечающее за то видимо ли модальное окно\n    const [modal, setModal] = useState(false);\n\n    //состояние для общего количества постов на сервере\n    const [totalPages, setTotalPages] = useState(0)\n    const [limit, setLimit] = useState(10)\n    const [page, setPage] = useState(1)\n\n    //сформируем массив со значениеями от 1 до 10\n    // на основании которого при нажатии на кнопки будет меняться страница\n    //let pagesArray = getPagesArray(totalPages);\n\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n    //штука для медленного интернета чтобы не было видно надписи \"Stickers not found\"\n    //const [isPostsLoading, setIsPostsLoading] = useState(false);\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n        const response = await PostService.getALL(limit, page);\n        setPosts(response.data)\n        const totalCount = (response.headers['x-total-count'])\n        setTotalPages(getPageCount(totalCount, limit));\n    })\n    //функция которая отправляет запрос на сервер получсает какие то данные\n    // и помещает их в состояние с постами\n\n    useEffect(() => {\n        fetchPosts();\n    }, [page])\n\n    //создаем пост из функции в PostForm.jsx\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n        //закрытие модального окна\n        setModal(false);\n    }\n    //получаем пост из дочернего компонента\n    //пришлость прокинуть функцию через два компонента PostItem и PostList\n    const removePost = (post) => {\n        //filter() - возвращает новый массив отфильтрованный по какому либо устровию\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    //функция которая изменяет номер страницы и подгружает новую порцию даннных\n    const changePage = (page) => {\n        setPage(page);\n\n    }\n\n    return (\n        //горизонтальный разделитель hr -->\n        <div className=\"App\">\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>\n                Create Sticker\n            </MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px 0'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {postError &&\n                <h1>Error ${postError}</h1>\n            }\n            {isPostsLoading\n                ? <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}><Loader/></div>\n                : <PostList remove={removePost} posts={sortedAndSearchedPosts} title='Stickers'/>\n            }\n            <Pagination page={page} changePage={changePage} totalPages={totalPages}/>\n        </div>\n    );\n}\n\nexport default Posts;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const [post, setPost] = useState({});\n    const [comment, setComment] = useState([]);\n\n    const [fetchPostById, isLoading, error] = useFetching(async () => {\n        const response = await PostService.getById(params.id)\n        setPost(response.data)\n    });\n\n    const [fetchComments, isComLoading, comError] = useFetching(async () => {\n        const response = await PostService.getCommentsByPostId(params.id)\n        setComment(response.data)\n    });\n\n    useEffect(() => {\n        fetchPostById(params.id)\n        fetchComments(params.id)\n    }, [])\n\n    return (\n        <div style={{display: 'flex', width: '800px', flexWrap: 'wrap', justifyContent: 'center'}}>\n            <h1 style={{marginTop: '20px'}}>Open page with ID = {params.id}</h1>\n            {isLoading\n                ?  <Loader/>\n                : <div style={{marginTop: '20px', fontSize: '18pt', alignItems: 'center'}}>{post.id}. {post.title}</div>\n            }\n\n            <h1 style={{marginTop: '20px'}}>\n                Comments\n            </h1>\n\n            {isComLoading\n                ? <Loader/>\n                : <div style={{display: 'flex' ,justifyContent: 'center', flexDirection: 'column', border: '2px solid teal'}}>\n                    {comment.map(comm =>\n                        <div style={{flexDirection: 'column'}} key={comm.email} style={{marginTop: '15px'}}>\n                            <h5>{comm.email}</h5>\n                            <div>{comm.body}</div>\n                        </div>\n\n                        )}\n\n                </div>\n            }\n\n        </div>\n    );\n};\n\nexport default PostIdPage;","import React from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Posts from \"../pages/Posts\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Error from \"../pages/Error\";\n//import Error from \"../pages/Error\";\n\nconst AppRouter = () => {\n    return (\n        <Routes>\n            <Route path=\"/about\" element={<About/>}/>\n            <Route exact path=\"/posts\" element={<Posts/>}/>\n            <Route path=\"*\" element={<About/>}/>\n            <Route exact path=\"/posts/:id\" element={<PostIdPage/>}/>\n        </Routes>\n    );\n};\n\nexport default AppRouter;","import './styles/App.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport React from \"react\";\nimport Navbar from \"./components/UI/Navbar/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\n\nfunction App() {\n\n    return (\n                <Router>\n                    <Navbar/>\n                    <AppRouter/>\n                </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n        <App />\n);\n\n"],"sourceRoot":""}